---
export interface Props {
  items: Array<{
    name: string;
    url?: string;
  }>;
}

const { items } = Astro.props;

const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.name,
    "item": item.url ? `https://incr-ediblecupcakes.com${item.url}` : undefined
  }))
};
---

<nav aria-label="Breadcrumb" class="py-4">
  <ol class="flex items-center space-x-2 text-sm text-gray-600">
    {items.map((item, index) => (
      <li class="flex items-center">
        {index > 0 && (
          <svg class="w-4 h-4 mx-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
        )}
        {item.url ? (
          <a href={item.url} class="text-cupcake-coral hover:text-cupcake-cherry transition-colors">
            {item.name}
          </a>
        ) : (
          <span class="text-gray-900 font-medium">{item.name}</span>
        )}
      </li>
    ))}
  </ol>
</nav>

<script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />
