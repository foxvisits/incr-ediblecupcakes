---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ClientOnly from '../components/ClientOnly.tsx';

const schemaData = {
  "@context": "https://schema.org",
  "@type": "ContactPage",
  "name": "Contact Incr-EdibleCupCakes",
  "description": "Contact professional baker Sarah for recipe questions, workshops, and collaborations",
  "url": "https://incr-ediblecupcakes.com/contact",
  "mainEntity": {
    "@type": "Organization",
    "name": "Incr-EdibleCupCakes",
    "contactPoint": {
      "@type": "ContactPoint",
      "telephone": "+1-555-123-CAKE",
      "email": "sarah@incr-ediblecupcakes.com",
      "contactType": "customer service",
      "availableLanguage": "English",
      "hoursAvailable": {
        "@type": "OpeningHoursSpecification",
        "dayOfWeek": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
        "opens": "09:00",
        "closes": "17:00"
      }
    }
  }
};
---

<BaseLayout 
  title="Contact Sarah - Professional Baker | Incr-EdibleCupCakes"
  description="Get in touch with Sarah for baking questions, recipe help, workshop information, or collaboration opportunities. Professional baker available for consultations and custom recipe development."
  image="/Sarah.png"
  canonical="https://incr-ediblecupcakes.com/contact"
>
  <Header />
  
  <main class="pt-16 lg:pt-20">
    <Fragment slot="head">
      <meta name="keywords" content="contact baker, baking questions, recipe help, baking workshops, collaboration, custom recipes, professional baker consultation" />
      <meta property="og:title" content="Contact Sarah - Professional Baker | Incr-EdibleCupCakes" />
      <meta property="og:description" content="Get in touch with Sarah for baking questions, recipe help, workshop information, or collaboration opportunities." />
      <meta property="og:type" content="website" />
      <meta property="og:url" content="https://incr-ediblecupcakes.com/contact" />
      <meta property="og:image" content="https://incr-ediblecupcakes.com/Sarah.png" />
      <meta name="twitter:card" content="summary_large_image" />
      <meta name="twitter:title" content="Contact Sarah - Professional Baker | Incr-EdibleCupCakes" />
      <meta name="twitter:description" content="Get in touch with Sarah for baking questions, recipe help, workshop information, or collaboration opportunities." />
      <meta name="twitter:image" content="https://incr-ediblecupcakes.com/Sarah.png" />
      <script type="application/ld+json" set:html={JSON.stringify(schemaData)} />
    </Fragment>

    {/* Hero Section */}
    <section class="relative py-20 bg-gradient-to-br from-cupcake-coral via-sunshine-400 to-cupcake-cherry overflow-hidden">
      <div class="absolute inset-0">
        <ClientOnly client:load>
          <>
          {[...Array(10)].map((_, i) => (
            <div
              key={i}
              class="absolute animate-float-random opacity-20"
              style={{
                left: `${Math.random() * 100}%`,
                top: `${Math.random() * 100}%`,
                animationDelay: `${i * 0.4}s`,
                animationDuration: `${3 + i * 0.3}s`,
              }}
            >
              {i % 3 === 0 ? 'üßÅ' : i % 3 === 1 ? 'üíå' : 'üìß'}
            </div>
          ))}
          </>
        </ClientOnly>
      </div>

      <div class="relative z-10 max-w-4xl mx-auto text-center px-4 sm:px-6 lg:px-8">
        <h1 class="font-quicksand text-4xl sm:text-5xl font-black text-white mb-6 leading-tight drop-shadow-2xl">
          Let's Create Something
          <span class="block text-sunshine-300 animate-gradient-text">Sweet Together</span>
        </h1>
        <p class="font-nunito text-xl text-pink-100 leading-relaxed max-w-2xl mx-auto drop-shadow-lg">
          Have a question about a recipe? Want to collaborate? Or just want to share your baking success? 
          I'd love to hear from you!
        </p>
      </div>
    </section>

    {/* Contact Information & Form */}
    <section class="py-20 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
          
          {/* Contact Information */}
          <div class="space-y-8">
            <div>
              <h2 class="font-quicksand text-3xl font-black text-gray-900 mb-6">
                Get in <span class="text-cupcake-coral">Touch</span>
              </h2>
              <p class="font-nunito text-gray-600 text-lg leading-relaxed">
                Whether you're a beginner baker or a seasoned pro, I'm here to help you create 
                incredible cupcakes. Don't hesitate to reach out with questions, suggestions, 
                or just to share your baking adventures!
              </p>
            </div>

            <div class="space-y-6">
              {[
                {
                  icon: 'mail',
                  title: 'Email',
                  info: 'sarah@incr-ediblecupcakes.com',
                  description: 'Best way to reach me for detailed questions'
                },
                {
                  icon: 'phone',
                  title: 'Phone',
                  info: '+1 (555) 123-CAKE',
                  description: 'Available Monday-Friday, 9AM-5PM EST'
                },
                {
                  icon: 'map-pin',
                  title: 'Studio Location',
                  info: 'Portland, Oregon',
                  description: 'By appointment only for workshops'
                },
                {
                  icon: 'clock',
                  title: 'Response Time',
                  info: 'Within 24 hours',
                  description: 'Usually much faster!'
                }
              ].map((contact, index) => (
                <div key={index} class="flex items-start space-x-4 p-4 bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-300">
                  <div class="w-12 h-12 bg-gradient-to-br from-cupcake-coral to-sunshine-400 rounded-full flex items-center justify-center flex-shrink-0">
                    {contact.icon === 'mail' && (
                      <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                      </svg>
                    )}
                    {contact.icon === 'phone' && (
                      <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                      </svg>
                    )}
                    {contact.icon === 'map-pin' && (
                      <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                      </svg>
                    )}
                    {contact.icon === 'clock' && (
                      <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                      </svg>
                    )}
                  </div>
                  <div>
                    <h3 class="font-quicksand font-bold text-gray-900">{contact.title}</h3>
                    <p class="text-cupcake-coral font-medium">{contact.info}</p>
                    <p class="font-nunito text-gray-500 text-sm">{contact.description}</p>
                  </div>
                </div>
              ))}
            </div>

            {/* Social Media */}
            <div class="pt-8 border-t border-gray-200">
              <h3 class="font-quicksand font-bold text-gray-900 mb-4">Follow My Baking Journey</h3>
              <div class="flex space-x-4">
                {[
                  { icon: 'instagram', label: '@incrediblecupcakes', href: 'https://instagram.com/incrediblecupcakes' },
                  { icon: 'facebook', label: 'IncrEdibleCupCakes', href: 'https://facebook.com/incrediblecupcakes' },
                ].map((social, index) => (
                  <a
                    key={index}
                    href={social.href}
                    class="font-quicksand flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-cupcake-coral to-sunshine-400 text-white rounded-full hover:from-cupcake-cherry hover:to-sunshine-500 transition-all duration-300 transform hover:scale-105 font-bold"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    {social.icon === 'instagram' && (
                      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.748-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24.009c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.012.001z"/>
                      </svg>
                    )}
                    {social.icon === 'facebook' && (
                      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                      </svg>
                    )}
                    <span class="text-sm">{social.label}</span>
                  </a>
                ))}
              </div>
            </div>
          </div>

          {/* Contact Form */}
          <div class="bg-white rounded-2xl shadow-xl p-8">
            <h3 class="font-quicksand text-2xl font-black text-gray-900 mb-6">Send Me a Message</h3>
            
            <form class="space-y-6" id="contact-form">
              <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <div>
                  <label for="name" class="block text-sm font-bold text-gray-700 mb-2 font-quicksand">
                    Your Name *
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-cupcake-coral focus:border-transparent transition-all duration-300 font-nunito"
                    placeholder="Enter your name"
                  />
                </div>
                <div>
                  <label for="email" class="block text-sm font-bold text-gray-700 mb-2 font-quicksand">
                    Email Address *
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-cupcake-coral focus:border-transparent transition-all duration-300 font-nunito"
                    placeholder="your@email.com"
                  />
                </div>
              </div>

              <div>
                <label for="subject" class="block text-sm font-bold text-gray-700 mb-2 font-quicksand">
                  Subject *
                </label>
                <select
                  id="subject"
                  name="subject"
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-cupcake-coral focus:border-transparent transition-all duration-300 font-nunito"
                >
                  <option value="">Select a topic</option>
                  <option value="recipe-question">Recipe Question</option>
                  <option value="collaboration">Collaboration Inquiry</option>
                  <option value="workshop">Workshop Information</option>
                  <option value="feedback">Feedback & Suggestions</option>
                  <option value="media">Media & Press</option>
                  <option value="other">Other</option>
                </select>
              </div>

              <div>
                <label for="message" class="block text-sm font-bold text-gray-700 mb-2 font-quicksand">
                  Your Message *
                </label>
                <textarea
                  id="message"
                  name="message"
                  required
                  rows="6"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-cupcake-coral focus:border-transparent transition-all duration-300 resize-none font-nunito"
                  placeholder="Tell me about your baking goals, questions, or just say hello!"
                ></textarea>
              </div>

              <button
                type="submit"
                class="font-quicksand w-full py-4 bg-gradient-to-r from-cupcake-coral to-sunshine-400 text-white font-bold rounded-lg hover:from-cupcake-cherry hover:to-sunshine-500 transition-all duration-300 transform hover:scale-105 shadow-lg flex items-center justify-center space-x-2"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"/>
                </svg>
                <span>Send Message</span>
              </button>
            </form>

            <div class="mt-6 p-4 bg-cupcake-pink/20 rounded-lg border border-cupcake-coral/30">
              <div class="flex items-center space-x-2 text-cupcake-coral">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"/>
                </svg>
                <span class="font-nunito text-sm font-medium">
                  I read every message personally and aim to respond within 24 hours!
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    {/* FAQ Section */}
    <section class="py-20 bg-gradient-to-br from-cupcake-pink/20 to-sunshine-100/50">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="font-quicksand text-3xl font-black text-gray-900 text-center mb-12">
          Frequently Asked <span class="text-cupcake-coral">Questions</span>
        </h2>
        
        <div class="space-y-6">
          {[
            {
              question: 'Can I substitute ingredients in your recipes?',
              answer: 'Many substitutions are possible! I include notes in each recipe, but feel free to ask about specific swaps.'
            },
            {
              question: 'Do you offer private baking workshops?',
              answer: 'Yes! I offer both in-person workshops in Portland and virtual sessions worldwide. Contact me for details.'
            },
            {
              question: 'How do you develop your keto and vegan recipes?',
              answer: 'Each recipe goes through extensive testing to ensure it tastes amazing while meeting dietary requirements. I never compromise on flavor!'
            },
            {
              question: 'Can I feature your recipes on my blog?',
              answer: 'I love collaborations! Please reach out to discuss proper attribution and usage guidelines.'
            }
          ].map((faq, index) => (
            <div key={index} class="bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-shadow duration-300">
              <h3 class="font-quicksand font-bold text-gray-900 mb-3">{faq.question}</h3>
              <p class="font-nunito text-gray-600">{faq.answer}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  </main>

  <Footer />

  <script>
    document.getElementById('contact-form').addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Get form data
      const formData = new FormData(this);
      const data = {
        name: formData.get('name'),
        email: formData.get('email'),
        subject: formData.get('subject'),
        message: formData.get('message')
      };
      
      // Handle form submission
      console.log('Form submitted:', data);
      alert('Thank you for your message! I\'ll get back to you soon.');
      
      // Reset form
      this.reset();
    });
  </script>
</BaseLayout>